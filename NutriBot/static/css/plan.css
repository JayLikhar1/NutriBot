/* Plan Container */
.plan-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
}

.plan-header {
    text-align: center;
    margin-bottom: 3rem;
}

.plan-header h1 {
    font-size: 2.5rem;
    color: var(--text-primary);
    margin-bottom: 1rem;
}

.plan-header p {
    color: var(--text-secondary);
    font-size: 1.1rem;
}

/* Form Container */
.form-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
    background: var(--bg-secondary);
    border-radius: 20px;
    box-shadow: 0 8px 16px var(--shadow-color);
    animation: fadeIn 0.8s ease-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.form-container h1 {
    color: var(--text-primary);
    font-size: 2.5rem;
    margin-bottom: 2rem;
    text-align: center;
    animation: slideInDown 0.8s ease-out 0.2s both;
}

@keyframes slideInDown {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Form Sections */
.form-section {
    margin-bottom: 2.5rem;
    padding: 2rem;
    background: var(--bg-primary);
    border-radius: 15px;
    border: 1px solid var(--border-color);
    /* animation: fadeIn 0.8s ease-out; */ /* Removed to avoid conflict with JS */
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    position: relative;
    overflow: hidden;
    opacity: 0; /* Explicitly set initial state for JS animation */
    transform: translateY(20px); /* Explicitly set initial state for JS animation */
}

.form-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, transparent, rgba(var(--primary-color-rgb), 0.05), transparent); /* Use RGB var */
    transform: translateX(-100%);
    transition: transform 0.6s ease;
}

.form-section:hover::before {
    transform: translateX(100%);
}

.form-section:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(var(--shadow-color-rgb), 0.1); /* Use RGB var */
}

.form-section h2 {
    color: var(--text-primary);
    font-size: 1.8rem;
    margin-bottom: 1.5rem;
    padding-bottom: 0.8rem;
    border-bottom: 2px solid var(--primary-color);
    animation: slideInLeft 0.8s ease-out;
    position: relative;
}

.form-section h2::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--primary-color);
    transition: width 0.6s ease;
}

.form-section:hover h2::after {
    width: 100%;
}

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

/* Form Grid */
.form-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
}

/* Form Groups */
.form-group {
    margin-bottom: 1.8rem;
    animation: fadeIn 0.8s ease-out;
    transition: transform 0.3s ease;
}

.form-group:hover {
    transform: translateX(5px);
}

.form-group label {
    display: block;
    color: var(--text-primary);
    font-size: 1.1rem;
    margin-bottom: 0.8rem;
    font-weight: 500;
    transition: color 0.3s ease;
}

.form-group:hover label {
    color: var(--primary-color);
}

.form-group input,
.form-group select {
    width: 100%;
    padding: 1rem;
    border: 2px solid var(--border-color);
    border-radius: 12px;
    font-size: 1.1rem;
    color: var(--text-primary);
    background: var(--bg-primary);
    transition: all 0.3s ease;
}

.form-group input:focus,
.form-group select:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb), 0.2); /* Use RGB var */
    outline: none;
    transform: translateY(-2px);
}

.form-group input:hover,
.form-group select:hover {
    border-color: var(--primary-color);
    transform: translateY(-2px);
}

/* Radio Group */
.radio-group {
    display: flex;
    gap: 2rem;
    margin-top: 0.5rem;
    animation: fadeIn 0.8s ease-out;
}

.radio-option {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    position: relative;
    overflow: hidden;
}

.radio-option::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(var(--primary-color-rgb), 0.1); /* Use RGB var */
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s ease;
}

.radio-option:hover::before {
    transform: scaleX(1);
    transform-origin: left;
}

.radio-option:hover {
    transform: translateY(-2px);
}

.radio-option input[type="radio"] {
    width: auto;
    margin: 0;
    cursor: pointer;
    transition: transform 0.2s ease;
}

.radio-option:hover input[type="radio"] {
    transform: scale(1.1);
}

.radio-option label {
    margin: 0;
    cursor: pointer;
    font-size: 1.1rem;
    color: var(--text-primary);
    transition: color 0.3s ease;
}

.radio-option:hover label {
    color: var(--primary-color);
}

/* Activity Level */
.activity-level {
    margin-bottom: 2rem;
}

.activity-options {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 1.5rem;
}

.activity-card {
    background: var(--bg-primary);
    padding: 1.5rem;
    border-radius: 15px;
    text-align: center;
    cursor: pointer;
    border: 2px solid var(--border-color);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    min-height: 160px;
    z-index: 0; /* Added z-index */
}

.activity-card input[type="radio"] {
    display: none;
}

.activity-card i {
    font-size: 2.5rem;
    color: var(--primary-color);
    margin-bottom: 1rem;
    transition: transform 0.3s ease, color 0.3s ease;
}

.activity-card h3 {
    font-size: 1.3rem;
    color: var(--text-primary);
    margin-bottom: 0.5rem;
    transition: color 0.3s ease;
}

.activity-card p {
    font-size: 0.95rem;
    color: var(--text-secondary);
    transition: color 0.3s ease;
}

.activity-card:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow: 0 10px 20px rgba(var(--shadow-color-rgb), 0.15); /* Use RGB var */
    border-color: var(--primary-color);
}

.activity-card:hover i {
    transform: scale(1.1);
}

.activity-card.selected {
    background: var(--primary-color-light);
    border-color: var(--primary-color);
    box-shadow: 0 10px 20px rgba(var(--primary-color-rgb), 0.2); /* Use RGB var */
    transform: translateY(-5px);
}

.activity-card.selected i,
.activity-card.selected h3,
.activity-card.selected p {
    color: var(--primary-color-dark);
}

/* Goals Section */
.goals-section {
    margin-bottom: 2rem;
}

.goals-options {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 1.5rem;
}

.goal-card {
    background: var(--bg-primary);
    padding: 1.5rem;
    border-radius: 15px;
    text-align: center;
    cursor: pointer;
    border: 2px solid var(--border-color);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    min-height: 160px;
    z-index: 0; /* Added z-index */
}

.goal-card input[type="radio"] {
    display: none;
}

.goal-card i {
    font-size: 2.5rem;
    color: var(--accent-color);
    margin-bottom: 1rem;
    transition: transform 0.3s ease, color 0.3s ease;
}

.goal-card h3 {
    font-size: 1.3rem;
    color: var(--text-primary);
    margin-bottom: 0.5rem;
    transition: color 0.3s ease;
}

.goal-card p {
    font-size: 0.95rem;
    color: var(--text-secondary);
    transition: color 0.3s ease;
}

.goal-card:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow: 0 10px 20px rgba(var(--shadow-color-rgb), 0.15); /* Use RGB var */
    border-color: var(--accent-color);
}

.goal-card:hover i {
    transform: scale(1.1);
}

.goal-card.selected {
    background: var(--accent-color-light);
    border-color: var(--accent-color);
    box-shadow: 0 10px 20px rgba(var(--accent-color-rgb), 0.2); /* Use RGB var */
    transform: translateY(-5px);
}

.goal-card.selected i,
.goal-card.selected h3,
.goal-card.selected p {
    color: var(--accent-color-dark);
}

/* Dietary Preferences */
.diet-preferences {
    margin-bottom: 2rem;
}

.preferences-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem;
}

.preference-group {
    background: var(--bg-primary);
    padding: 1.8rem;
    border-radius: 15px;
    border: 1px solid var(--border-color);
    box-shadow: 0 4px 8px rgba(var(--shadow-color-rgb), 0.05); /* Use RGB var */
}

.preference-group h3 {
    color: var(--text-primary);
    font-size: 1.5rem;
    margin-bottom: 1.5rem;
    padding-bottom: 0.8rem;
    border-bottom: 2px solid var(--secondary-color);
}

.checkbox-group {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.checkbox-label {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    cursor: pointer;
    font-size: 1.1rem;
    color: var(--text-secondary);
    transition: all 0.3s ease;
    padding: 0.8rem;
    border-radius: 8px;
    border: 1px solid var(--border-color);
    background: var(--bg-secondary);
    position: relative;
    overflow: hidden;
    min-height: 50px;
    z-index: 0; /* Added z-index */
}

.checkbox-label:hover {
    background: var(--bg-tertiary);
    border-color: var(--primary-color);
    transform: translateX(5px);
}

.checkbox-label input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 20px;
    height: 20px;
    border: 2px solid var(--text-secondary);
    border-radius: 4px;
    cursor: pointer;
    position: relative;
    transition: all 0.3s ease;
    flex-shrink: 0;
}

.checkbox-label input[type="checkbox"]:checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}

.checkbox-label input[type="checkbox"]:checked::before {
    content: '\2713';
    display: block;
    color: white;
    font-size: 14px;
    text-align: center;
    line-height: 18px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.checkbox-label input[type="checkbox"]:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb), 0.3); /* Use RGB var */
}

.checkbox-label span {
    flex-grow: 1;
    color: var(--text-primary);
}

.checkbox-label.selected {
    background: var(--primary-color-light);
    border-color: var(--primary-color);
    box-shadow: 0 4px 12px rgba(var(--primary-color-rgb), 0.2); /* Use RGB var */
    transform: translateX(5px);
}

.checkbox-label.selected span {
    color: var(--primary-color-dark);
}

/* Ripple Effect */
.ripple {
    position: absolute;
    border-radius: 50%;
    background: var(--ripple-color); /* Correctly using the variable */
    transform: scale(0);
    animation: ripple-animation 0.6s linear;
    z-index: 1;
}

@keyframes ripple-animation {
    to {
        transform: scale(2.5);
        opacity: 0;
    }
}

/* Form Actions & Buttons */
.form-actions {
    display: flex;
    justify-content: center;
    padding-top: 1rem;
}

.btn-primary {
    background: linear-gradient(45deg, var(--primary-color), var(--accent-color));
    color: var(--button-text-color); /* Correctly using the variable */
    padding: 1rem 2rem;
    border: none;
    border-radius: 10px;
    font-size: 1.2rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 6px 12px rgba(var(--primary-color-rgb), 0.3); /* Use RGB var */
    position: relative;
    overflow: hidden;
    z-index: 1;
}

.btn-primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, var(--btn-overlay-light), var(--btn-overlay-dark)); /* Correctly using variables */
    transform: translateX(-100%);
    transition: transform 0.6s ease;
    z-index: -1;
}

.btn-primary:hover::before {
    transform: translateX(100%);
}

.btn-primary:hover {
    transform: translateY(-3px) scale(1.02);
    box-shadow: 0 8px 16px rgba(var(--primary-color-rgb), 0.4); /* Use RGB var */
}

.btn-primary:active {
    transform: translateY(0);
    box-shadow: 0 4px 8px rgba(var(--primary-color-rgb), 0.2); /* Use RGB var */
}

/* Error Message Styles */
.form-group input.error,
.form-group select.error {
    border-color: var(--error-color);
    box-shadow: 0 0 0 3px rgba(var(--error-color-rgb), 0.2); /* Corrected from error-shadow-color to use error-color-rgb directly, assuming base.css defines it as needed */
    animation: shake 0.3s ease-in-out;
}

@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    20%, 60% {
        transform: translateX(-5px);
    }
    40%, 80% {
        transform: translateX(5px);
    }
}

.error-message {
    color: var(--error-color);
    font-size: 0.9rem;
    margin-top: 0.5rem;
    text-align: center;
    animation: fadeIn 0.3s ease-out;
}

.form-group input.error + .error-message,
.form-group select.error + .error-message {
    display: block;
}

/* Media Queries */
@media (max-width: 768px) {
    .plan-header h1 {
        font-size: 2rem;
    }

    .form-container {
        padding: 1.5rem;
    }

    .form-container h1 {
        font-size: 2rem;
    }

    .form-section {
        padding: 1.5rem;
    }

    .form-section h2 {
        font-size: 1.5rem;
    }

    .radio-group {
        flex-direction: column;
        gap: 1rem;
    }

    .form-group label {
        font-size: 1rem;
    }

    .form-group input,
    .form-group select {
        font-size: 1rem;
        padding: 0.8rem;
    }

    .submit-btn {
        padding: 0.8rem 1.5rem;
        font-size: 1rem;
    }

    .activity-options,
    .goals-options,
    .preferences-grid {
        grid-template-columns: 1fr;
    }

    .activity-card,
    .goal-card,
    .checkbox-label {
        min-height: auto;
    }
} 